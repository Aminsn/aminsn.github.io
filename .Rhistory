getwd)
getwd()
install.packages('INLA')
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(INLA)
# Simulating some data
x = runif(100,10,30)
y = sin(x) + rnorm(100,0,0.3)
df = data.frame(x=x, y=y)
# bining the predictor
df$x.class = inla.group(df$x)
# model definition
formula = y ~ -1 + f(x.class, model = 'rw1')
# fitting the model
model = inla(formula, data = df)
library(INLA)
# Simulating some data
x = runif(100,10,30)
y = sin(x) + rnorm(100,0,0.3)
df = data.frame(x=x, y=y)
# bining the predictor
df$x.class = inla.group(df$x)
# model definition
formula = y ~ -1 + f(x.class, model = 'rw1')
# fitting the model
model = inla(formula, data = df)
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/testing"), dep=TRUE)
install.packages("INLA", repos = c(getOption("repos"), INLA = "https://inla.r-inla-download.org/R/testing"), dep = TRUE)
library(INLA)
# Simulating some data
x = runif(100,10,30)
y = sin(x) + rnorm(100,0,0.3)
df = data.frame(x=x, y=y)
# bining the predictor
df$x.class = inla.group(df$x)
# model definition
formula = y ~ -1 + f(x.class, model = 'rw1')
# fitting the model
model = inla(formula, data = df)
# extracting the estimated effects
class_id = model$summary.random$x.class$ID
mean = model$summary.random$x.class$mean
lower = model$summary.random$x.class$`0.025quant`
higher = model$summary.random$x.class$`0.975quant`
# plotting the results
plot(x,y)
lines(class_id, mean, col = 'red')
lines(class_id, lower, col = 'blue', lty = 2)
lines(class_id, higher, col = 'blue', lty = 2)
